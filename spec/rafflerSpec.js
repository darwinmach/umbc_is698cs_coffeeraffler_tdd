// Generated by CoffeeScript 1.6.3
(function() {
  describe("App namespace", function() {
    return it("should be defined", function() {
      return expect(Raffler).toBeDefined();
    });
  });

  describe("Entry model", function() {
    it("should exist", function() {
      return expect(Raffler.Models.Entry).toBeDefined();
    });
    describe("Attributes", function() {
      var entryTest;
      entryTest = new Raffler.Models.Entry;
      return it("should have default attributes", function() {
        expect(entryTest.attributes.name).toBeDefined();
        expect(entryTest.attributes.winner).toBeDefined();
        return expect(entryTest.attributes.winner).toBeFalsy();
      });
    });
    return describe("Collection", function() {
      var entriesTest;
      entriesTest = new Raffler.Collections.Entries;
      it("should exist", function() {
        return expect(Raffler.Collections.Entries).toBeDefined();
      });
      return it("should use entry model", function() {
        return expect(entriesTest.model).toEqual(Raffler.Models.Entry);
      });
    });
  });

  describe("App view", function() {
    var entriesData, hiddenDiv;
    entriesData = [
      {
        id: 0,
        name: 'Test1',
        winner: false
      }, {
        id: 1,
        name: 'Test2',
        winner: false
      }, {
        id: 2,
        name: 'Test3',
        winner: false
      }
    ];
    hiddenDiv = document.createElement('div');
    beforeEach(function() {
      this.entriesCollection = new Raffler.Collections.Entries(entriesData);
      return this.entriesView = new Raffler.Views.EntriesIndex({
        collection: this.entriesCollection,
        el: hiddenDiv
      });
    });
    it("should be defined", function() {
      return expect(Raffler.Views.EntriesIndex).toBeDefined();
    });
    it("should have the right element", function() {
      return expect(this.entriesView.el).toEqual(hiddenDiv);
    });
    return it("should have the right collection", function() {
      return expect(this.entriesView.collection).toEqual(this.entriesCollection);
    });
  });

}).call(this);
